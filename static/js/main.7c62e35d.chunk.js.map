{"version":3,"sources":["components/Api.js","components/Details/Details.js","components/ReposList/ReposList.js","App.js","reportWebVitals.js","index.js"],"names":["BASE_URL","Details","saved","JSON","parse","localStorage","getItem","useState","readme","setReadme","description","details","setDetails","isEditing","setIsEditing","readmeElement","setReadmeElement","isNotSaved","setIsNotSaved","useEffect","id","name","repo","fetch","owner","login","then","response","json","result","content","clean","DOMPurify","sanitize","str","decodeURIComponent","escape","window","atob","className","classNames","error","placeholder","value","type","onChange","event","target","setItem","Button","onClick","dangerouslySetInnerHTML","__html","marked","Item","as","href","default_branch","ReposList","repos","setRepos","query","setQuery","sort","setSort","githubName","setGithubName","setName","userName","user","repos_url","a","b","updated_at","localeCompare","path","exact","primary","Form","Field","widths","Input","filter","toLowerCase","includes","toLocaleLowerCase","map","Card","Image","src","avatar_url","Content","Header","stringify","to","Meta","Description","extra","size","component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAAMA,EAAW,0B,+ECcJC,EAAU,WACrB,IAAMC,EAAQC,KAAKC,MAAMC,aAAaC,QAAQ,SAC9C,EAA4BC,mBAAS,MAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA8BF,mBAASL,EAAMQ,aAA7C,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAkCL,oBAAS,GAA3C,mBAAOM,EAAP,KAAkBC,EAAlB,KACA,EAA0CP,mBAAS,MAAnD,mBAAOQ,EAAP,KAAsBC,EAAtB,KACA,EAAoCT,oBAAS,GAA7C,mBAAOU,EAAP,KAAmBC,EAAnB,KAEAC,qBAAU,WACJd,aAAaC,QAAQJ,EAAMkB,KAAOf,aAAaC,QAAQJ,EAAMmB,QAC/DP,EAAaT,aAAaC,QAAQJ,EAAMkB,KACxCF,GAAc,GACdN,EAAWP,aAAaC,QAAQJ,EAAMmB,UAEvC,IAmBHF,qBAAU,WDxCa,IAACG,KCyCZpB,EDxCZqB,MAAM,GAAD,OAAIvB,EAAJ,iBAAqBsB,EAAKE,MAAMC,MAAhC,YAAyCH,EAAKD,KAA9C,YACFK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WCwCxBF,MAAK,SAAAG,GAAM,OAAIpB,EAAUoB,EAAOC,cAClC,IAEHX,qBAAU,WACR,GAAIX,EAAQ,CACV,IAAMuB,EAAQC,IAAUC,UATPC,EAS4B1B,EATpB2B,mBAAmBC,OAAOC,OAAOC,KAAKJ,OAU/DlB,EAAiBe,GAVD,IAACG,IAYlB,CAAC1B,IAOJ,OACE,0BAAS+B,UAAU,iBAAnB,UACG1B,EAEG,sBAAK0B,UAAU,iBAAf,UACE,uBACEA,UAAWC,IAAW,OAAQ,CAACC,MAAOxB,IACtCyB,YAAY,oBACZC,MAAOhC,EAASiC,KAAK,OACrBC,SAtCO,SAACC,GAClBlC,EAAWkC,EAAMC,OAAOJ,OACxBtC,aAAa2C,QAAQ9C,EAAMmB,KAAMV,MAuCzB,cAACsC,EAAA,EAAD,CAAQV,UAAU,cAAcI,MAAOhC,EAASuC,QApCzC,WACfpC,GAAa,GACbI,GAAc,IAkCN,kBACCD,GAAc,mBAAGsB,UAAU,gBAAb,2CAKjB,qBAAIA,UAAU,aAAd,UACG5B,EACD,cAACsC,EAAA,EAAD,CAAQV,UAAU,qBAAqBW,QAtDpC,WACXpC,GAAa,GACbT,aAAa2C,QAAQ9C,EAAMkB,GAAIP,IAoDvB,qBAGL,uBACAE,GAAiB,qBAAKwB,UAAU,SAASY,wBA3BrC,CAAEC,OADIC,IAAOtC,MA6BlB,sBAAKwB,UAAU,eAAf,UACE,mBAAGA,UAAU,OAAb,+BACA,cAACe,EAAA,EAAD,CAAMf,UAAU,OAAOgB,GAAG,IAAIC,KAAI,uCAAkCtD,EAAMsB,MAAMC,MAA9C,YAAuDvB,EAAMmB,KAA7D,oBAA6EnB,EAAMuD,gBAArH,iCC/EKC,G,OAAY,WACvB,MAA0BnD,mBAAS,IAAnC,mBAAOoD,EAAP,KAAcC,EAAd,KACA,EAA0BrD,mBAAS,IAAnC,mBAAOsD,EAAP,KAAcC,EAAd,KACA,EAAwBvD,mBAAS,IAAjC,mBAAOwD,EAAP,KAAaC,EAAb,KACA,EAAoCzD,mBAAS,MAA7C,mBAAO0D,EAAP,KAAmBC,EAAnB,KACA,EAAwB3D,oBAAS,GAAjC,mBAAOc,EAAP,KAAa8C,EAAb,KA0CA,OApBAhD,qBAAU,WFrCW,IAAAiD,EEsCfH,IFtCeG,EEuCTH,EFtCZ1C,MAAM,GAAD,OAAIvB,EAAJ,iBAAqBoE,IACvB1C,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WEsCtBF,MAAK,SAAA2C,GAAI,OAAIA,KACb3C,MAAK,SAAA2C,GAAI,OACR9C,MAAM8C,EAAKC,WACR5C,MAAK,SAAAG,GAAM,OAAIA,EAAOD,UACtBF,MAAK,SAAAiC,GAAK,OAAIC,EAASD,WAE/B,CAACM,IAEJN,EAAMI,MAAK,SAACQ,EAAGC,GACb,OAAQT,GACN,IAAK,OACH,OAAOQ,EAAEE,WAAWC,cAAcF,EAAEC,YACtC,IAAK,QACH,OAAOF,EAAElD,KAAKqD,cAAcF,EAAEnD,UAKlC,qCACE,eAAC,IAAD,CAAOsD,KAAK,WAAWC,OAAK,EAA5B,UACE,qBAAKrC,UAAU,SAAf,2BACA,sBAAKA,UAAU,wBAAf,UACE,uBACEI,MAAOsB,EACPpB,SA3CQ,SAACC,GACjBoB,EAAcpB,EAAMC,OAAOJ,QA2CnBC,KAAK,OACLF,YAAY,sBAEd,cAACO,EAAA,EAAD,CAAQC,QAnDG,WACjBiB,GAAQ,IAkD2BU,SAAO,EAApC,uBAEDxD,GACC,qCACE,oBAAIkB,UAAU,QAAd,kCACA,eAACuC,EAAA,EAAKC,MAAN,CAAYC,OAAO,QAAQzC,UAAU,cAArC,UACE,cAAC0C,EAAA,EAAD,CAAOrC,KAAK,OAAOD,MAAOkB,EAAOhB,SA7CtB,SAACC,GACtBgB,EAAShB,EAAMC,OAAOJ,QA4C+CD,YAAY,oBACvE,yBAAQC,MAAOoB,EAAMlB,SA1Cf,SAACC,GACjBkB,EAAQlB,EAAMC,OAAOJ,QAyC+BJ,UAAU,SAApD,UACE,wBAAQI,MAAM,OAAd,0BACA,wBAAQA,MAAM,QAAd,iCAGJ,oBAAIJ,UAAU,aAAd,SACGoB,EAAMuB,QAAO,SAAA5D,GAAI,OAAIA,EAAKD,KAAK8D,cAAcC,SAASvB,EAAMwB,wBAAsBC,KAAI,SAAAhE,GAAI,OACzF,oBAAkBiB,UAAU,kBAA5B,SACE,eAACgD,EAAA,EAAD,CAAMhD,UAAU,OAAhB,UACE,cAACiD,EAAA,EAAD,CAAOC,IAAKnE,EAAKE,MAAMkE,aACvB,eAACH,EAAA,EAAKI,QAAN,WACE,cAACJ,EAAA,EAAKK,OAAN,2BAAwBtE,EAAKE,MAAMC,SAAsB,uBACzD,cAAC,IAAD,CAAMyB,QAAS,kBA9DnB,SAAC5B,GACfjB,aAAa2C,QAAQ,OAAQ7C,KAAK0F,UAAUvE,IA6DL4B,CAAQ5B,IAAOiB,UAAU,OAAOuD,GAAG,WAAxD,0BAA8ExE,EAAKD,QACnF,uBACA,cAACkE,EAAA,EAAKQ,KAAN,UACE,sBAAMxD,UAAU,OAAhB,gCAAwCjB,EAAKmD,gBACnC,uBACZ,cAACc,EAAA,EAAKS,YAAN,CAAkBzD,UAAU,cAA5B,SACGjB,EAAKZ,iBAGV,cAAC6E,EAAA,EAAKI,QAAN,CAAcM,OAAK,EAAnB,SACE,mBAAG1D,UAAU,SAAb,2BAAkCjB,EAAK4E,cAfpC5E,EAAKF,eAuBxB,cAAC,IAAD,CAAOuD,KAAK,WAAWwB,UAAWlG,S,OC9FzBmG,MARf,WACE,OACE,qBAAK7D,UAAU,MAAf,SACE,cAAC,EAAD,OCIS8D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB7E,MAAK,YAAkD,IAA/C8E,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAASC,OACP,cAAC,IAAD,UACE,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAG1BZ,M","file":"static/js/main.7c62e35d.chunk.js","sourcesContent":["const BASE_URL = 'https://api.github.com/';\n\nexport const getRepo = userName => (\n  fetch(`${BASE_URL}users/${userName}`)\n    .then(response => response.json())\n);\n\nexport const getReadme = (repo) => (\n  fetch(`${BASE_URL}repos/${repo.owner.login}/${repo.name}/readme`)\n    .then(response => response.json())\n);\n","import React, { useEffect, useState } from 'react';\n\nimport marked from 'marked';\nimport DOMPurify from 'dompurify';\n\nimport classNames from \"classnames\";\n\nimport { Item, Button } from 'semantic-ui-react'\n\nimport './Details.css';\n\n\nimport { getReadme } from '../Api';\n\nexport const Details = () => {\n  const saved = JSON.parse(localStorage.getItem('repo'));\n  const [readme, setReadme] = useState(null);\n  const [details, setDetails] = useState(saved.description);\n  const [isEditing, setIsEditing] = useState(false);\n  const [readmeElement, setReadmeElement] = useState(null);\n  const [isNotSaved, setIsNotSaved] = useState(false);\n\n  useEffect(() => {\n    if (localStorage.getItem(saved.id) && localStorage.getItem(saved.name)) {\n      setIsEditing(localStorage.getItem(saved.id));\n      setIsNotSaved(true);\n      setDetails(localStorage.getItem(saved.name));\n    }\n  }, [])\n\n  const edit = () => {\n    setIsEditing(true);\n    localStorage.setItem(saved.id, isEditing)\n  }\n\n  const changeText = (event) => {\n    setDetails(event.target.value)\n    localStorage.setItem(saved.name, details);\n  }\n\n  const saveText = () => {\n    setIsEditing(false)\n    setIsNotSaved(false);\n  }\n\n  const b64_to_utf8 = (str) => decodeURIComponent(escape(window.atob(str)));\n\n  useEffect(() => {\n    getReadme(saved)\n      .then(result => setReadme(result.content))\n  }, []);\n\n  useEffect(() => {\n    if (readme) {\n      const clean = DOMPurify.sanitize(b64_to_utf8(readme));\n      setReadmeElement(clean)\n    }\n  }, [readme]);\n\n  const getMarkdownText = () => {\n    const html = marked(readmeElement);\n    return { __html: html };\n  }\n\n  return (\n    <section className='repo-container'>\n      {isEditing ?\n        (\n          <div className='edit-container'>\n            <input\n              className={classNames('edit', {error: isNotSaved})}\n              placeholder='enter github name'\n              value={details} type='text'\n              onChange={changeText}\n            >\n            </input>\n            <Button className='save-button' value={details} onClick={saveText}>save</Button>\n            {isNotSaved && <p className='error-message'>you forgot to save changes</p>}\n          </div>\n        )\n        :\n        (\n          <h2 className='repo-title'>\n            {details}\n            <Button className=\"button edit-button\" onClick={edit}>edit</Button>\n          </h2>\n        )\n      }<br />\n      {readmeElement && <div className='readme' dangerouslySetInnerHTML={getMarkdownText()} />}\n      <div className='tags-and-zip'>\n        <p className='tags'>Tags: in progress</p>\n        <Item className='link' as='a' href={`https://api.github.com/repos/${saved.owner.login}/${saved.name}/zipball/${saved.default_branch}`}>Download zip</Item>\n      </div>\n    </section>\n  )\n}\n","import React, { useEffect, useState } from 'react';\nimport { Route, Link } from \"react-router-dom\";\n\nimport { Card, Image, Input, Form, Button } from 'semantic-ui-react'\n\nimport { getRepo } from '../Api';\n\nimport { Details } from '../Details/Details';\nimport './ReposList.css';\n\n\n\nexport const ReposList = () => {\n  const [repos, setRepos] = useState([]);\n  const [query, setQuery] = useState('');\n  const [sort, setSort] = useState('');\n  const [githubName, setGithubName] = useState(null);\n  const [name, setName] = useState(false);\n\n  const nameSearch = () => {\n    setName(true);\n  }\n\n  const nameEnter = (event) => {\n    setGithubName(event.target.value)\n  }\n\n  const onClick = (repo) => {\n    localStorage.setItem('repo', JSON.stringify(repo));\n  }\n\n  const hendleOnChange = (event) => {\n    setQuery(event.target.value);\n  }\n\n  const reposSort = (event) => {\n    setSort(event.target.value);\n  }\n\n  useEffect(() => {\n    if (githubName) {\n      getRepo(githubName)\n        .then(user => user)\n        .then(user =>\n          fetch(user.repos_url)\n            .then(result => result.json())\n            .then(repos => setRepos(repos)))\n    }\n  }, [githubName]);\n\n  repos.sort((a, b) => {\n    switch (sort) {\n      case 'date':\n        return a.updated_at.localeCompare(b.updated_at);\n      case 'title':\n        return a.name.localeCompare(b.name);\n    }\n  });\n\n  return (\n    <>\n      <Route path='/git-api' exact>\n        <div className='navbar'>Github Search</div>\n        <div className=\"ui focus input search\">\n          <input\n            value={githubName}\n            onChange={nameEnter}\n            type=\"text\"\n            placeholder=\"Enter github name\"\n          />\n          <Button onClick={nameSearch} primary>Search</Button>\n        </div>\n        {name &&\n          <>\n            <h1 className='title'>List of Repositories</h1>\n            <Form.Field widths='equal' className='searchTitle' >\n              <Input type='text' value={query} onChange={hendleOnChange} placeholder=\"Search by title\"></Input>\n              <select value={sort} onChange={reposSort} className='select'>\n                <option value='date'>sort by date</option>\n                <option value='title'>sort by title</option>\n              </select>\n            </Form.Field>\n            <ul className='list-group'>\n              {repos.filter(repo => repo.name.toLowerCase().includes(query.toLocaleLowerCase())).map(repo => (\n                <li key={repo.id} className='list-group-item'>\n                  <Card className='card'>\n                    <Image src={repo.owner.avatar_url} />\n                    <Card.Content>\n                      <Card.Header>{`autor: ${repo.owner.login}`}</Card.Header><br />\n                      <Link onClick={() => onClick(repo)} className='name' to='/details'>{`Title: ${repo.name}`}</Link>\n                      <br />\n                      <Card.Meta>\n                        <span className='date'>{`last update: ${repo.updated_at}`}</span>\n                      </Card.Meta><br />\n                      <Card.Description className=\"description\">\n                        {repo.description}\n                      </Card.Description>\n                    </Card.Content>\n                    <Card.Content extra>\n                      <p className='rating'>{`Rating: ${repo.size}`}</p>\n                    </Card.Content>\n                  </Card>\n                </li>\n              ))}\n            </ul>\n          </>}\n      </Route>\n      <Route path='/details' component={Details}>\n      </Route>\n    </>\n  );\n}\n","import './App.css';\nimport React from 'react';\nimport { ReposList } from './components/ReposList/ReposList'\nimport 'semantic-ui-css/semantic.min.css'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ReposList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\";\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}