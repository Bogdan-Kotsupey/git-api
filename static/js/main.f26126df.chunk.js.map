{"version":3,"sources":["components/Api.js","components/Details.js","components/ReposList.js","App.js","reportWebVitals.js","index.js"],"names":["BASE_URL","Details","str","saved","JSON","parse","localStorage","getItem","useState","readme","setReadme","description","details","setDetails","isEditing","setIsEditing","useEffect","repo","fetch","owner","login","name","then","response","json","result","content","placeholder","value","type","onChange","event","target","onClick","decodeURIComponent","escape","window","atob","href","default_branch","ReposList","repos","setRepos","query","setQuery","sort","setSort","githubName","setGithubName","setName","userName","user","repos_url","a","b","updated_at","localeCompare","path","exact","className","filter","toLowerCase","includes","toLocaleLowerCase","map","alt","src","avatar_url","setItem","stringify","to","size","id","component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f26126df.chunk.js","sourcesContent":["const BASE_URL = 'https://api.github.com/';\n\nexport const getRepo = userName => (\n  fetch(`${BASE_URL}users/${userName}`)\n    .then(response => response.json())\n);\n\nexport const getReadme = (repo) => (\n  fetch(`${BASE_URL}repos/${repo.owner.login}/${repo.name}/readme`)\n    .then(response => response.json())\n);\n","import marked from 'marked';\nimport React, { useEffect, useState } from 'react';\nimport { getReadme } from './Api';\n\nexport const Details = () => {\n  const saved = JSON.parse(localStorage.getItem('repo'));\n  const [readme, setReadme] = useState(null);\n  const [details, setDetails] = useState(saved.description);\n  const [isEditing, setIsEditing] = useState(false);\n  // const [readmeElement, setReadmeElement] = useState(null);gi\n\n  const edit = () => {\n    setIsEditing(true);\n  }\n\n  const changeText = (event) => {\n    setDetails(event.target.value)\n  }\n\n  const saveText = (event) => {\n    setDetails(event.target.value)\n    setIsEditing(false)\n  }\n\n  const b64_to_utf8 = (str) => decodeURIComponent(escape(window.atob(str)));\n\n  // if (readme) {\n  //   setReadmeElement(<div>{b64_to_utf8(readme)}</div>)\n  // }\n\n  //   const  b64DecodeUnicode = (str) => {\n  //     // Going backwards: from bytestream, to percent-encoding, to original string.\n  //     return decodeURIComponent(atob(str).split('').map(function(c) {\n  //         return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n  //     }).join(''));\n  // }\n\n  useEffect(() => {\n    getReadme(saved)\n      .then(result => setReadme((result.content)))\n  }, []);\n\n  return (\n    <>\n      {isEditing ? (<><input placeholder='enter github name' value={details} type='text' onChange={changeText}></input> <button value={details} onClick={saveText}>save</button></>) : (<p>\n        {details}\n        <button onClick={edit}>edit</button>\n      </p>)}\n      <p>Tags:</p>\n      {/* {readmeElement &&\n        <>\n          {readmeElement, console.log(readmeElement)}\n          <script src=\"https://cdn.jsdelivr.net/npm/marked/marked.min.js\"></script>\n          {readmeElement.innerHTML = marked('README.md')}\n        </>\n      } */}\n      {readme && <pre>{b64_to_utf8(readme)}</pre>}\n      <a href={`https://api.github.com/repos/${saved.owner.login}/${saved.name}/zipball/${saved.default_branch}`}>Download zip</a><br />\n    </>\n  )\n}\n","import React, { useEffect, useState } from 'react';\nimport { getRepo } from './Api';\nimport './ReposList.css';\nimport { Route, Link } from \"react-router-dom\";\nimport { Details } from './Details';\n\nexport const ReposList = () => {\n  const [repos, setRepos] = useState([]);\n  const [query, setQuery] = useState('');\n  const [sort, setSort] = useState('');\n  const [githubName, setGithubName] = useState('');\n  const [name, setName] = useState(false);\n\n  const nameSearch = () => {\n    setName(true);\n  }\n\n  const nameEnter = (event) => {\n    setGithubName(event.target.value)\n  }\n\n  const onClick = (repo) => {\n    localStorage.setItem('repo', JSON.stringify(repo));\n  }\n\n  const hendleOnChange = (event) => {\n    setQuery(event.target.value);\n  }\n\n  const reposSort = (event) => {\n    setSort(event.target.value);\n  }\n\n  useEffect(() => {\n    getRepo(githubName)\n      .then(user => user)\n      .then(user =>\n        fetch(user.repos_url)\n          .then(result => result.json())\n          .then(repos => setRepos(repos)))\n  }, [githubName]);\n\n  repos.sort((a, b) => {\n    switch (sort) {\n      case 'date':\n        return a.updated_at.localeCompare(b.updated_at);\n      case 'title':\n        return a.name.localeCompare(b.name);\n    }\n  });\n\n  return (\n    <>\n      <Route path='/git-api' exact>\n        <input placeholder=\"Enter github name\" value={githubName} onChange={nameEnter} type=\"text\"></input>\n        <button onClick={nameSearch}>Search</button>\n        {name &&\n          <>\n            <h1 className='title'>List of Repositories</h1>\n            <input\n              type='text'\n              value={query}\n              onChange={hendleOnChange}\n            >\n            </input>\n            <select value={sort} onChange={reposSort}>\n              <option value=''>choose filter</option>\n              <option value='date'>by date uppdate</option>\n              <option value='title'>by title</option>\n            </select>\n            <ul className='list-group'>\n              {repos.filter(repo => repo.name.toLowerCase().includes(query.toLocaleLowerCase())).map(repo => (\n                <li key={repo.id} className='list-group-item'>\n                  <div className='autor-container'>\n                    <p className='autor'>{`Autor: ${repo.owner.login}`}</p>\n                    <img className='photo' alt='autor of repo' src={repo.owner.avatar_url} />\n                  </div>\n                  <Link onClick={() => onClick(repo)} className='name' to='/details'>{`Title: ${repo.name}`}</Link>\n                  <p className='details'>{`Details: ${repo.description}`}</p>\n                  <p className='update'>{`Last uppdate: ${repo.updated_at}`}</p>\n                  <p className='rating'>{`Rating: ${repo.size}`}</p>\n                </li>\n              ))}\n            </ul>\n          </>}\n      </Route>\n      <Route path='/details' component={Details}>\n      </Route>\n    </>\n  );\n}\n","import './App.css';\nimport React from 'react';\nimport { ReposList } from './components/ReposList'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ReposList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}