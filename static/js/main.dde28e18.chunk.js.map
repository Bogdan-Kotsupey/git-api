{"version":3,"sources":["components/Api.js","components/Details/Details.js","components/ReposList/ReposList.js","App.js","reportWebVitals.js","index.js"],"names":["BASE_URL","Details","saved","JSON","parse","localStorage","getItem","useState","readme","setReadme","description","details","setDetails","tags","setTags","isEditing","setIsEditing","readmeElement","setReadmeElement","isNotSaved","setIsNotSaved","useEffect","repo","id","node_id","fetch","then","response","json","result","owner","login","name","content","setItem","clean","DOMPurify","sanitize","str","decodeURIComponent","escape","window","atob","className","classNames","error","value","type","onChange","event","target","Button","onClick","removeItem","map","tag","Item","as","href","default_branch","dangerouslySetInnerHTML","__html","marked","ReposList","repos","setRepos","query","setQuery","sort","setSort","githubName","setGithubName","search","setSearch","setName","userName","user","repos_url","stringify","a","b","updated_at","localeCompare","path","exact","length","placeholder","primary","Form","Field","widths","Input","clear","location","reload","filter","toLowerCase","includes","toLocaleLowerCase","Card","Image","src","avatar_url","Content","Header","chooseRepo","to","Meta","replace","Description","extra","stargazers_count","component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dde28e18.chunk.js","sourcesContent":["const BASE_URL = 'https://api.github.com/';\n\nexport const getRepo = userName => (\n  fetch(`${BASE_URL}users/${userName}`)\n    .then(response => response.json())\n);\n\nexport const getReadme = (repo) => (\n  fetch(`${BASE_URL}repos/${repo.owner.login}/${repo.name}/readme`)\n    .then(response => response.json())\n);\n\nexport const getTags = () => (\n  fetch('https://api.github.com/repos/bogdan/accept_values_for/tags')\n    .then(response => response.json())\n)\n","import React, { useEffect, useState } from 'react';\n\nimport marked from 'marked';\nimport DOMPurify from 'dompurify';\n\nimport classNames from \"classnames\";\n\nimport { Item, Button } from 'semantic-ui-react'\n\nimport { getReadme, getTags } from '../Api';\n\nimport './Details.css';\n\n\nexport const Details = () => {\n  const saved = JSON.parse(localStorage.getItem('repo'));\n  const [readme, setReadme] = useState('');\n  const [details, setDetails] = useState(saved.description);\n  const [tags, setTags] = useState([]);\n  const [isEditing, setIsEditing] = useState(false);\n  const [readmeElement, setReadmeElement] = useState('');\n  const [isNotSaved, setIsNotSaved] = useState(false);\n\n  const edit = () => {\n    setIsEditing(true);\n    localStorage.setItem(saved.id, isEditing)\n  }\n\n  const saveText = () => {\n    setIsEditing(false);\n    setIsNotSaved(false);\n    localStorage.removeItem(saved.id);\n  }\n\n  const b64_to_utf8 = (str) => decodeURIComponent(escape(window.atob(str)));\n\n  useEffect(() => {\n    if (localStorage.getItem(saved.id)) {\n      setIsEditing(true);\n      setIsNotSaved(true);\n    }\n\n    if(localStorage.getItem(saved.node_id)) {\n      setDetails(localStorage.getItem(saved.node_id))\n    }\n\n    getTags()\n    .then(result => setTags(result));\n\n    getReadme(saved)\n      .then(result => setReadme(result.content))\n  }, []);\n\n  useEffect(() => {\n    if (isEditing) {\n      localStorage.setItem(saved.node_id, details)\n    }\n  }, [details])\n\n  useEffect(() => {\n    if (readme) {\n      const clean = DOMPurify.sanitize(b64_to_utf8(readme));\n      setReadmeElement(clean)\n    }\n  }, [readme]);\n\n  const getMarkdownText = () => {\n    const html = marked(readmeElement);\n    return { __html: html };\n  }\n\n  return (\n    <section className='repo-container'>\n      {isEditing ?\n        (\n          <div className='edit-container'>\n            <textarea\n              className={classNames('edit', { error: isNotSaved })}\n              value={details}\n              type='text'\n              onChange={event => setDetails(event.target.value)}\n            >\n            </textarea>\n            <Button\n              className='save-button'\n              value={details}\n              onClick={saveText}\n            >\n              save\n            </Button>\n            {isNotSaved && <p className='error-message'>you forgot to save changes</p>}\n          </div>\n        )\n        :\n        (\n          <h2 className='repo-title'>\n            {details}\n            <Button className=\"button edit-button\" onClick={edit}>edit</Button>\n          </h2>\n\n        )\n      }\n      <div className='tags-container'>\n        <b>Tags:</b>\n        {tags.map(tag => (\n          <p className='tags' key={tag.node_id}>{tag.name}</p>\n        ))}\n      </div>\n      <div className='link-container'>\n        <Item className='zip' as='a' href={`https://api.github.com/repos/${saved.owner.login}/${saved.name}/zipball/${saved.default_branch}`}>Download zip</Item>\n      </div>\n\n      {readmeElement && <div className='readme' dangerouslySetInnerHTML={getMarkdownText()} />}\n    </section>\n  )\n}\n","import React, { useEffect, useState } from 'react';\nimport { Route, Link } from \"react-router-dom\";\n\nimport { Card, Image, Input, Form, Button } from 'semantic-ui-react'\n\nimport { getRepo } from '../Api';\nimport { Details } from '../Details/Details';\n\nimport './ReposList.css';\n\n\nexport const ReposList = () => {\n  const [repos, setRepos] = useState(JSON.parse(localStorage.getItem('repos')) || []);\n  const [query, setQuery] = useState('');\n  const [sort, setSort] = useState('');\n  const [githubName, setGithubName] = useState('');\n  const [search, setSearch] = useState('');\n  const [name, setName] = useState(false);\n\n  const nameEnter = (event) => {\n    setGithubName(event.target.value)\n  }\n\n  const nameSearch = () => {\n    setSearch(githubName);\n  }\n\n  const chooseRepo = (repo) => {\n    localStorage.setItem('repo', JSON.stringify(repo));\n  }\n\n  const hendleOnChange = (event) => {\n    setQuery(event.target.value);\n  }\n\n  const clearLocalStorage = () => {\n    localStorage.clear();\n    window.location.reload();\n  }\n\n  const reposSort = (event) => {\n    setSort(event.target.value);\n  }\n\n  useEffect(() => {\n    if (search) {\n      getRepo(search)\n        .then(user =>\n          fetch(user.repos_url)\n            .then(result => result.json())\n            .then(repos => setRepos(repos))\n            .then(setName(true)))\n    }\n  }, [search]);\n\n  localStorage.setItem('repos', JSON.stringify(repos))\n\n  repos.sort((a, b) => {\n    switch (sort) {\n      case 'date':\n        return a.updated_at.localeCompare(b.updated_at);\n      case 'title':\n        return a.name.localeCompare(b.name);\n    }\n  });\n\n  return (\n    <>\n      <Route path='/git-api' exact>\n        <div className='navbar'>Github Search</div>\n        {repos.length === 0 && (\n          <div className=\"ui focus input search\">\n            <p>{JSON.parse(localStorage.getItem('repos'))}</p>\n            <input\n              value={githubName}\n              onChange={nameEnter}\n              type=\"text\"\n              placeholder=\"Enter github name\"\n            />\n            <Button onClick={nameSearch} primary>Search</Button>\n          </div>\n        )}\n        {repos.length === 0 && name && <p className='notFound'>user not found</p>}\n        {repos.length > 0 &&\n          <>\n            <h1 className='title'>List of Repositories</h1>\n            <Form.Field widths='equal' className='searchTitle' >\n              <Input\n                type='text'\n                value={query}\n                onChange={hendleOnChange}\n                placeholder=\"Search by title\"\n              >\n              </Input>\n              <select\n                value={sort}\n                onChange={reposSort}\n                className='select'\n              >\n                <option value='date'>sort by date</option>\n                <option value='title'>sort by title</option>\n              </select>\n              <Button onClick={clearLocalStorage} primary>select another user</Button>\n            </Form.Field>\n            <ul className='list-group'>\n              {repos.length > 0 && repos.filter(repo => repo.name.toLowerCase().includes(query.toLocaleLowerCase())).map(repo => (\n                <li key={repo.id} className='list-group-item'>\n                  <Card className='card'>\n                    <Image src={repo.owner.avatar_url} />\n                    <Card.Content>\n                      <Card.Header>{`autor: ${repo.owner.login}`}</Card.Header><br />\n                      <Link\n                        onClick={() => chooseRepo(repo)}\n                        className='name'\n                        to='/details'\n                      >\n                        {`Title: ${repo.name}`}\n                      </Link><br />\n                      <Card.Meta>\n                        <span className='date'>{`last update: ${repo.updated_at.replace('T', ' at ').replace('Z', '')}`}</span>\n                      </Card.Meta><br />\n                      <Card.Description className=\"description\">\n                        {repo.description}\n                      </Card.Description>\n                    </Card.Content>\n                    <Card.Content extra>\n                      <p className='rating'>{`Rating: ${repo.stargazers_count}`}</p>\n                    </Card.Content>\n                  </Card>\n                </li>\n              ))}\n            </ul>\n          </>}\n      </Route>\n      <Route path='/details' component={Details}>\n      </Route>\n    </>\n  );\n}\n","import React from 'react';\n\nimport { ReposList } from './components/ReposList/ReposList';\n\nimport 'semantic-ui-css/semantic.min.css';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ReposList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\";\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}