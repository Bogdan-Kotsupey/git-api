{"version":3,"sources":["components/Api.js","components/Details.js","components/ReposList.js","App.js","reportWebVitals.js","index.js"],"names":["BASE_URL","Details","repo","useState","setReadme","description","details","setDetails","isEditing","setIsEditing","useEffect","fetch","owner","login","name","then","response","json","getReadme","result","content","autofocus","value","type","onChange","event","target","onClick","href","default_branch","ReposList","repos","setRepos","query","setQuery","sort","setSort","choose","setChoose","githubName","setGithubName","setName","userName","user","repos_url","a","b","updated_at","localeCompare","path","exact","placeholder","className","filter","toLowerCase","includes","toLocaleLowerCase","map","alt","src","avatar_url","to","size","id","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8ff44972.chunk.js","sourcesContent":["const BASE_URL = 'https://api.github.com/';\n\nexport const getRepo = userName => (\n  fetch(`${BASE_URL}users/${userName}`)\n    .then(response => response.json())\n);\n\nexport const getReadme = (repo) => (\n  fetch(`${BASE_URL}repos/${repo.owner.login}/${repo.name}/readme`)\n    .then(response => response.json())\n);\n","import marked from 'marked';\nimport React, { useEffect, useState } from 'react';\nimport { getReadme } from './Api';\n\nexport const Details = ({ repo }) => {\n  const [readme, setReadme] = useState({});\n  const [details, setDetails] = useState(repo.description);\n  const [isEditing, setIsEditing] = useState(false);\n\n  const edit = () => {\n    setIsEditing(true);\n  }\n\n  const changeText = (event) => {\n    setDetails(event.target.value)\n  }\n\n  const saveText = (event) => {\n    setDetails(event.target.value)\n    setIsEditing(false)\n  }\n\n  const b64_to_utf8 = (str) => decodeURIComponent(escape(window.atob(str)));\n\n  useEffect(() => {\n    getReadme(repo)\n      .then(result => setReadme(result.content))\n  }, []);\n\n  return (\n    <>\n      {isEditing ? (<><input autofocus value={details} type='text' onChange={changeText}></input> <button value={details} onClick={saveText}>save</button></>) : (<p>\n        {details}\n        <button onClick={edit}>edit</button>\n      </p>)}\n      <p>Tags:</p>\n      {/* <div id=\"content\">{b64_to_utf8(readme)}</div>\n      <script src=\"https://cdn.jsdelivr.net/npm/marked/marked.min.js\"></script>\n      <script>\n        {document.getElementById('content').innerHTML =\n        marked('README.md')}\n      </script> */}\n      {/* <pre>{b64_to_utf8(readme)}</pre> */}\n      <a href={`https://api.github.com/repos/${repo.owner.login}/${repo.name}/zipball/${repo.default_branch}`}>Download zip</a><br />\n    </>\n  )\n}\n","import React, { useEffect, useState } from 'react';\nimport { getRepo } from './Api';\nimport './ReposList.css';\nimport { Route, Link } from \"react-router-dom\";\nimport { Details } from './Details';\n\nexport const ReposList = () => {\n  const [repos, setRepos] = useState([]);\n  const [query, setQuery] = useState('');\n  const [sort, setSort] = useState('');\n  const [choose, setChoose] = useState({});\n  const [githubName, setGithubName] = useState('');\n  const [name, setName] = useState(false);\n\n  const nameSearch = () => {\n    setName(true);\n  }\n\n  const nameEnter = (event) => {\n    setGithubName(event.target.value)\n  }\n\n  const onClick = (repo) => {\n    setChoose(repo);\n  }\n\n  const hendleOnChange = (event) => {\n    setQuery(event.target.value);\n  }\n\n  const reposSort = (event) => {\n    setSort(event.target.value);\n  }\n\n  useEffect(() => {\n    getRepo(githubName)\n      .then(user => user)\n      .then(user =>\n        fetch(user.repos_url)\n          .then(result => result.json())\n          .then(repos => setRepos(repos)))\n  }, [githubName]);\n\n  repos.sort((a, b) => {\n    switch (sort) {\n      case 'date':\n        return a.updated_at.localeCompare(b.updated_at);\n      case 'title':\n        return a.name.localeCompare(b.name);\n    }\n  });\n\n  return (\n    <>\n      <Route path='/git-api' exact>\n        <input placeholder=\"Enter github name\" value={githubName} onChange={nameEnter} type=\"text\"></input>\n        <button onClick={nameSearch}>Save</button>\n        {name &&\n        <>\n        <h1 className='title'>List of Repositories</h1>\n        <input\n          type='text'\n          value={query}\n          onChange={hendleOnChange}\n        >\n        </input>\n        <select value={sort} onChange={reposSort}>\n          <option value=''>choose filter</option>\n          <option value='date'>by date uppdate</option>\n          <option value='title'>by title</option>\n        </select>\n        <ul className='list-group'>\n          {repos.filter(repo => repo.name.toLowerCase().includes(query.toLocaleLowerCase())).map(repo => (\n            <li key={repo.id} className='list-group-item'>\n              <div className='autor-container'>\n                <p className='autor'>{`Autor: ${repo.owner.login}`}</p>\n                <img className='photo' alt='autor of repo' src={repo.owner.avatar_url} />\n              </div>\n              <Link onClick={() => onClick(repo)} className='name' to='/details'>{`Title: ${repo.name}`}</Link>\n              <p className='details'>{`Details: ${repo.description}`}</p>\n              <p className='update'>{`Last uppdate: ${repo.updated_at}`}</p>\n              <p className='rating'>{`Rating: ${repo.size}`}</p>\n            </li>\n          ))}\n        </ul>\n        </>}\n      </Route>\n      <Route path='/details'>\n        <Details\n          repo={choose}\n        />\n      </Route>\n    </>\n  );\n}\n","import './App.css';\nimport React from 'react';\nimport { ReposList } from './components/ReposList'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ReposList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}